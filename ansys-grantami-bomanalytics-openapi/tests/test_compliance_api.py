# coding: utf-8

"""
    Granta.BomAnalyticsServices

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: V1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pytest  # noqa: F401
import requests_mock

from ansys.grantami.bomanalytics_openapi.api.compliance_api import ComplianceApi  # noqa: E501
from ansys.grantami.bomanalytics_openapi.models.get_compliance_for_bom1711_request import GetComplianceForBom1711Request
from ansys.grantami.bomanalytics_openapi.models.get_compliance_for_bom1711_response import GetComplianceForBom1711Response
from ansys.grantami.bomanalytics_openapi.models.get_compliance_for_materials_request import GetComplianceForMaterialsRequest
from ansys.grantami.bomanalytics_openapi.models.get_compliance_for_materials_response import GetComplianceForMaterialsResponse
from ansys.grantami.bomanalytics_openapi.models.get_compliance_for_parts_request import GetComplianceForPartsRequest
from ansys.grantami.bomanalytics_openapi.models.get_compliance_for_parts_response import GetComplianceForPartsResponse
from ansys.grantami.bomanalytics_openapi.models.get_compliance_for_specifications_request import GetComplianceForSpecificationsRequest
from ansys.grantami.bomanalytics_openapi.models.get_compliance_for_specifications_response import GetComplianceForSpecificationsResponse
from ansys.grantami.bomanalytics_openapi.models.get_compliance_for_substances_request import GetComplianceForSubstancesRequest
from ansys.grantami.bomanalytics_openapi.models.get_compliance_for_substances_response import GetComplianceForSubstancesResponse
from .mocked_tests import generate_model, get_example


class TestComplianceApi():
    """ComplianceApi unit test stubs"""


    
    def test_post_compliance_bom1711(self, api_client):
        """Test case for post_compliance_bom1711

        Determine the compliance of a BoM in the context of specified indicators  # noqa: E501
        """
        model = generate_model(GetComplianceForBom1711Request)
        client = ComplianceApi(api_client)
        with requests_mock.Mocker() as m:
            m.post('http://localhost/mi_servicelayer/BomAnalytics/v1.svc/compliance/bom1711', json=get_example(GetComplianceForBom1711Response))
            result = client.post_compliance_bom1711(model)
        assert isinstance(result, GetComplianceForBom1711Response)

    
    def test_post_compliance_materials(self, api_client):
        """Test case for post_compliance_materials

        Determine the compliance of one or more materials in the context of specified indicators  # noqa: E501
        """
        model = generate_model(GetComplianceForMaterialsRequest)
        client = ComplianceApi(api_client)
        with requests_mock.Mocker() as m:
            m.post('http://localhost/mi_servicelayer/BomAnalytics/v1.svc/compliance/materials', json=get_example(GetComplianceForMaterialsResponse))
            result = client.post_compliance_materials(model)
        assert isinstance(result, GetComplianceForMaterialsResponse)

    
    def test_post_compliance_parts(self, api_client):
        """Test case for post_compliance_parts

        Determine the compliance of one or more parts in the context of specified indicators  # noqa: E501
        """
        model = generate_model(GetComplianceForPartsRequest)
        client = ComplianceApi(api_client)
        with requests_mock.Mocker() as m:
            m.post('http://localhost/mi_servicelayer/BomAnalytics/v1.svc/compliance/parts', json=get_example(GetComplianceForPartsResponse))
            result = client.post_compliance_parts(model)
        assert isinstance(result, GetComplianceForPartsResponse)

    
    def test_post_compliance_specifications(self, api_client):
        """Test case for post_compliance_specifications

        Determine the compliance of one or more specifications in the context of specified indicators  # noqa: E501
        """
        model = generate_model(GetComplianceForSpecificationsRequest)
        client = ComplianceApi(api_client)
        with requests_mock.Mocker() as m:
            m.post('http://localhost/mi_servicelayer/BomAnalytics/v1.svc/compliance/specifications', json=get_example(GetComplianceForSpecificationsResponse))
            result = client.post_compliance_specifications(model)
        assert isinstance(result, GetComplianceForSpecificationsResponse)

    
    def test_post_compliance_substances(self, api_client):
        """Test case for post_compliance_substances

        Determine the compliance of one or more substances in the context of specified indicators  # noqa: E501
        """
        model = generate_model(GetComplianceForSubstancesRequest)
        client = ComplianceApi(api_client)
        with requests_mock.Mocker() as m:
            m.post('http://localhost/mi_servicelayer/BomAnalytics/v1.svc/compliance/substances', json=get_example(GetComplianceForSubstancesResponse))
            result = client.post_compliance_substances(model)
        assert isinstance(result, GetComplianceForSubstancesResponse)

